// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FormSimple should render FormSimple 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FormSimple
    components={
      Object {
        "ActionGroupComponent": [Function],
        "FormComponent": [Function],
        "FormFieldComponent": [Function],
      }
    }
    fieldValues={
      Object {
        "input1": "Hello Form",
      }
    }
    fields={
      Array [
        Object {
          "label": "Input1",
          "name": "input1",
        },
      ]
    }
    flexFieldLayout={
      Object {
        "maxWidth": "25%",
        "minWidth": "25%",
      }
    }
    flexLayout={
      Object {
        "wrap": true,
      }
    }
    translations={Object {}}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "buttonsProps": Object {
        "components": Object {
          "ActionGroupComponent": [Function],
          "FormComponent": [Function],
          "FormFieldComponent": [Function],
        },
        "errors": undefined,
        "labels": Object {
          "reset": "Reset",
          "submit": "Search",
        },
        "resetable": undefined,
        "showReset": undefined,
        "submitDisabled": undefined,
      },
      "components": Object {
        "ActionGroupComponent": [Function],
        "FormComponent": [Function],
        "FormFieldComponent": [Function],
      },
      "errors": undefined,
      "fieldValues": Object {
        "input1": "Hello Form",
      },
      "fields": Array [
        Object {
          "label": "Input1",
          "name": "input1",
        },
      ],
      "flexFieldLayout": Object {
        "maxWidth": "25%",
        "minWidth": "25%",
      },
      "flexLayout": Object {
        "wrap": true,
      },
      "formName": undefined,
      "handleSubmit": [Function],
      "renderButtonsMethod": [Function],
      "renderFieldMethod": [Function],
      "showErrors": undefined,
      "translations": Object {},
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "buttonsProps": Object {
          "components": Object {
            "ActionGroupComponent": [Function],
            "FormComponent": [Function],
            "FormFieldComponent": [Function],
          },
          "errors": undefined,
          "labels": Object {
            "reset": "Reset",
            "submit": "Search",
          },
          "resetable": undefined,
          "showReset": undefined,
          "submitDisabled": undefined,
        },
        "components": Object {
          "ActionGroupComponent": [Function],
          "FormComponent": [Function],
          "FormFieldComponent": [Function],
        },
        "errors": undefined,
        "fieldValues": Object {
          "input1": "Hello Form",
        },
        "fields": Array [
          Object {
            "label": "Input1",
            "name": "input1",
          },
        ],
        "flexFieldLayout": Object {
          "maxWidth": "25%",
          "minWidth": "25%",
        },
        "flexLayout": Object {
          "wrap": true,
        },
        "formName": undefined,
        "handleSubmit": [Function],
        "renderButtonsMethod": [Function],
        "renderFieldMethod": [Function],
        "showErrors": undefined,
        "translations": Object {},
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
