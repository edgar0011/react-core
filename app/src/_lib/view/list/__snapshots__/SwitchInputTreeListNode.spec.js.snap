// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SwitchInputTreeListNode should render SwitchInputTreeListNode 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SwitchInputTreeListNode
    components={
      Object {
        "option": Object {},
        "select": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div />,
        <div
          style={
            Object {
              "paddingLeft": "20px",
            }
          }
        >
          <SwitchInputList
            multiple={true}
            options={undefined}
            value={undefined}
          />
        </div>,
      ],
      "style": Object {
        "width": "100%",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SwitchInputList
            multiple={true}
            options={undefined}
            value={undefined}
          />,
          "style": Object {
            "paddingLeft": "20px",
          },
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "multiple": true,
            "options": undefined,
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div />,
          <div
            style={
              Object {
                "paddingLeft": "20px",
              }
            }
          >
            <SwitchInputList
              multiple={true}
              options={undefined}
              value={undefined}
            />
          </div>,
        ],
        "style": Object {
          "width": "100%",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SwitchInputList
              multiple={true}
              options={undefined}
              value={undefined}
            />,
            "style": Object {
              "paddingLeft": "20px",
            },
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "multiple": true,
              "options": undefined,
              "value": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
